name: Build k0sctl AUR Package

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:

  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
     - name: Checkout repository
       uses: actions/checkout@v4
     - name: Set matrix data
       id: set-matrix
       run: |
         which yq
         yq --help
         echo "matrix=$(yq eval -o json '.' packages.yaml | jq -cM '.include = (.packages | map({name: .})) | del(.packages)')" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache packages
        uses: actions/cache@v4
        with:
          path: ./packages
          key: ${{ runner.os }}-packages-${{ matrix.name }}
          restore-keys: |
            ${{ runner.os }}-packages-

      - name: Build package ${{ matrix.name }}
        run: |
          output_dir="$PWD/packages"
          mkdir -p "$output_dir"
          chmod +w "$output_dir"
          podman run --userns="keep-id:uid=1000" --rm --pull always -v "$output_dir:/packages" ghcr.io/pschichtel/makepkg:v12 yay -S --noconfirm "${{ matrix.name }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.name }}
          path: ./packages

  create-repo:
    runs-on: ubuntu-latest
    needs: build
    environment: repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: 'true'
          path: ./repo-packages

      - name: Create repository
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          find ./repo-packages
          repo_dir="$PWD/repo-packages"
          podman run \
            --userns="keep-id:uid=1000" \
            --rm \
            --pull always \
            -v "$PWD/build-repo.sh:/build-repo.sh" \
            -v "$repo_dir:/repo-packages" \
            -e "SIGNING_KEY=$SIGNING_KEY" \
            ghcr.io/pschichtel/makepkg:v12 \
            /build-repo.sh

      - name: Upload repository artifact
        uses: actions/upload-artifact@v4
        with:
          name: repository
          path: ./repo-packages

  release:
    runs-on: ubuntu-latest
    needs: create-repo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: 'true'
          path: ./repo-packages

      - name: Get Release by Tag
        id: get_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: releases } = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const release = releases.find(r => r.tag_name === 'packages');
            if (!release) {
              throw new Error(`Release with tag 'packages' not found`);
            }
            return { upload_url: release.upload_url };
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./repo-packages/*.tar.zstd
          asset_name: ${{ matrix.name }}.tar.zstd
          asset_content_type: application/zstd

